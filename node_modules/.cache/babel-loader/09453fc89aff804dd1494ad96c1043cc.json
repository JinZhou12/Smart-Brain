{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jinzhou/Desktop/coding/Web Dev/Smart-Brain/Smart-Brain-Front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/jinzhou/Desktop/coding/Web Dev/Smart-Brain/Smart-Brain-Front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jinzhou/Desktop/coding/Web Dev/Smart-Brain/Smart-Brain-Front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport var Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n\n    _classCallCheck(this, Absorbers);\n\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n\n    container.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    container.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n\n  _createClass(Absorbers, [{\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator = _createForOfIteratorHelper(this.array),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var absorber = _step.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var absorberOptions = this.absorbers,\n          modeAbsorbers = this.interactivityAbsorbers;\n\n      if (mode === \"absorber\") {\n        var absorbersModeOptions;\n\n        if (modeAbsorbers instanceof Array) {\n          if (modeAbsorbers.length > 0) {\n            absorbersModeOptions = itemFromArray(modeAbsorbers);\n          }\n        } else {\n          absorbersModeOptions = modeAbsorbers;\n        }\n\n        var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions,\n            aPosition = this.container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.absorbers) {\n        if (options.absorbers instanceof Array) {\n          this.absorbers = options.absorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber();\n          }\n\n          this.absorbers.load(options.absorbers);\n        }\n      }\n\n      var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityAbsorbers instanceof Array) {\n            this.interactivityAbsorbers = new Absorber();\n          }\n\n          this.interactivityAbsorbers.load(interactivityAbsorbers);\n        }\n      }\n\n      if (this.absorbers instanceof Array) {\n        var _iterator2 = _createForOfIteratorHelper(this.absorbers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var absorberOptions = _step2.value;\n            this.addAbsorber(absorberOptions);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else {\n        this.addAbsorber(this.absorbers);\n      }\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          absorber.attract(particle);\n\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var absorber = _step4.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }]);\n\n  return Absorbers;\n}();","map":{"version":3,"names":["Absorber","AbsorberInstance","itemFromArray","Absorbers","container","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","absorber","push","context","save","draw","restore","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","Array","length","absorbersOptions","aPosition","interactivity","mouse","clickPosition","_a","_b","map","s","tmp","load","modes","particle","attract","destroyed","index","indexOf","splice","resize"],"sources":["/Users/jinzhou/Desktop/coding/Web Dev/Smart-Brain/Smart-Brain-Front/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}